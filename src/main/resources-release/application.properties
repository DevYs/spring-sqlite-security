#####################################
#####################################
######    Release Resource     ######
#####################################
#####################################

# 설정과 관련된 내용은 아래 URL을 참조
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html

########################
# Embedded Server Config
########################
server.port=8080


#################
# DevTools Config
#################
# 클래스 패스의 파일을 수정시 바로 반영이 되도록 설정
# 1. IntelliJ Registry 설정
# Ctrl+Shift+A -> Registry -> compile.automake.allow.when.app.running: Check
# 2. IntelliJ 설정
# Preferences > Build,Execution,Deployment > Compiler > Build project Automatically: Check
spring.devtools.livereload.enabled=true


##################
# Thymeleaf Config
##################
# static 파일을 수정했을때 바로 반영이 되도록 설정
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=file:src/main/resources/templates/


#####################
# JDBC Datasource 설정
#####################

# JDBC 드라이버의 완전한 이름. 기본적으로 URL을 기반으로 자동 검색된다.
spring.datasource.driver-class-name=org.sqlite.JDBC

# 데이터베이스의 URL. SQLite의 경우 파일의 위치를 명시한다.
spring.datasource.url=jdbc:sqlite:./sqlite.db

# 데이터 소스의 이름. 내장 데이터베이스를 사용할 때 기본값은 "testdb".
spring.datasource.name=jdbc/sqlite

# 데이터베이스의 로그인 사용자 이름. SQLite는 명시하지 않는다.
spring.datasource.username=

# 데이터베이스의 로그인 암호. SQLite는 명시하지 않는다.
spring.datasource.password=

# 데이터베이스의 컬럼명이 언더바('_')로 구분되어있을 경우 Camel 표기로 변수명을 변경한다.
mybatis.configuration.map-underscore-to-camel-case=true


########################
# SSL 설정
########################
# genkey : 키를 생성한다
# alias : 키저장소 별칭
# keyalg : 암호화 알고리즘 방식 (아래는 RSA암호화 방식의 공개키쌍 생성)
# keystore : 키의 저장파일 (해당경로로 key가 생성된다)
# storetype : 키저장소 방식, 기본으로 제공되는 JKS가 있고 JCEKS라는 저장소도 있다 JCEKS는 3DES방식을 적용하기때문에 좀더 안전하다고 한다.
# validity : 유효기간. 아래는 100년으로 설정
# dname : 추가정보 입력

# KEY 생성
# keytool -genkey -alias testkeyname -keyalg RSA -keystore d:/signkeystore.ks -storetype JCEKS -validity 36500  -dname "cn=test, ou=test, o=test, c=KR" -keypass 123456 -storepass 123456
# KEY 삭제
# keytool -delete  -alias testkeyname -storetype JCEKS -keystore d:/signkeystore.ks -storepass 123456
# KEY List확인
# keytool -list -v -keystore d:/signkeystore.ks -storepass 123456 -storetype JCEKS

# SSL 사용여부
# server.ssl.enabled=true
# 키스토어 파일 (만약 프로젝트 내부가 아닌 다른 위치에 있다면 전체경로를 입력해야함)
# server.ssl.key-store=[xxxxxx.p12]
# 키스토어 파일 비밀번호
# server.ssl.key-store-password=
# 키스토어 파일 타입
# server.ssl.key-store-type=[PKCS12]
# 키스토어 별칭
# server.ssl.key-alias=
